esphome:
  name: nodemcu32-bowling
  platform: ESP32
  board: nodemcu-32s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Nodemcu32 Bowling"
    password: !secret ap_wifi_password

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_password

ota:
  password: !secret ota_password
  
web_server:
  port: 80
  

i2c:
  - id: bus_a
    sda: GPIO16
    scl: GPIO17
    scan: True

power_supply:
  - id: 'power_supply1'
    pin: 
      number: 13
      inverted: true
    keep_on_time: 3min
    
mcp23017:
  - id: 'gpio_hub'
    address: 0x27

pca9685:
  frequency: 50
  i2c_id: bus_a
  id: pca9685_1
  address: 0x40


light:
#####################Statuslicht Pins
  - platform: fastled_clockless
    chipset: WS2811
    pin: GPIO25
    num_leds: 10
    rgb_order: BRG
    name: "Statuslicht Pins"
    id: statuspins1
  - platform: partition
#    name: "Statuslicht Pin 1"
    id: statuspin1
    segments:
      - id: statuspins1
        from: 0
        to: 0
#    internal: true
  - platform: partition
#    name: "Statuslicht Pin 2"
    id: statuspin2
    segments:
      - id: statuspins1
        from: 1
        to: 1
#    internal: true
  - platform: partition
#    name: "Statuslicht Pin 3"
    id: statuspin3
    segments:
      - id: statuspins1
        from: 2
        to: 2
#    internal: true
  - platform: partition
#    name: "Statuslicht Pin 4"
    id: statuspin4
    segments:
      - id: statuspins1
        from: 5
        to: 5
#    internal: true
  - platform: partition
#    name: "Statuslicht Pin 5"
    id: statuspin5
    segments:
      - id: statuspins1
        from: 4
        to: 4
#    internal: true
  - platform: partition
#    name: "Statuslicht Pin 6"
    id: statuspin6
    segments:
      - id: statuspins1
        from: 3
        to: 3
#    internal: true
  - platform: partition
#    name: "Statuslicht Pin 7"
    id: statuspin7
    segments:
      - id: statuspins1
        from: 6
        to: 6
#    internal: true
  - platform: partition
#    name: "Statuslicht Pin 8"
    id: statuspin8
    segments:
      - id: statuspins1
        from: 7
        to: 7
#    internal: true
  - platform: partition
#    name: "Statuslicht Pin 9"
    id: statuspin9
    segments:
      - id: statuspins1
        from: 8
        to: 8
#    internal: true
  - platform: partition
#    name: "Statuslicht Pin 10"
    id: statuspin10
    segments:
      - id: statuspins1
        from: 9
        to: 9
#    internal: true
#####################Beleuchtung Pins
  - platform: fastled_clockless
    chipset: WS2811
    pin: GPIO15
    num_leds: 40
    rgb_order: BRG
    name: "Beleuchtung Pins"
    id: beleuchtungpin
  - platform: partition
#    name: "Beleuchtung Pin 10"
    id: beleuchtungpin10
    segments:
      - id: beleuchtungpin
        from: 0
        to: 3
  - platform: partition
#    name: "Beleuchtung Pin 6"
    id: beleuchtungpin6
    segments:
      - id: beleuchtungpin
        from: 4
        to: 7
  - platform: partition
#    name: "Beleuchtung Pin 5"
    id: beleuchtungpin5
    segments:
      - id: beleuchtungpin
        from: 8
        to: 11
  - platform: partition
#    name: "Beleuchtung Pin 9"
    id: beleuchtungpin9
    segments:
      - id: beleuchtungpin
        from: 12
        to: 15
  - platform: partition
#    name: "Beleuchtung Pin 7"
    id: beleuchtungpin7
    segments:
      - id: beleuchtungpin
        from: 16
        to: 19
  - platform: partition
#    name: "Beleuchtung Pin 8"
    id: beleuchtungpin8
    segments:
      - id: beleuchtungpin
        from: 20
        to: 23
  - platform: partition
#    name: "Beleuchtung Pin 4"
    id: beleuchtungpin4
    segments:
      - id: beleuchtungpin
        from: 24
        to: 27
  - platform: partition
#    name: "Beleuchtung Pin 2"
    id: beleuchtungpin2
    segments:
      - id: beleuchtungpin
        from: 28
        to: 31
  - platform: partition
#    name: "Beleuchtung Pin 3"
    id: beleuchtungpin3
    segments:
      - id: beleuchtungpin
        from: 32
        to: 35
  - platform: partition
#    name: "Beleuchtung Pin 1"
    id: beleuchtungpin1
    segments:
      - id: beleuchtungpin
        from: 36
        to: 39

binary_sensor:
#####################Statussensoren Pins
  - platform: gpio
    name: "Pin 1"
    id: pin1
    pin:
      number: GPIO18
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin1
    on_release:
      then:
        - light.turn_off: statuspin1
  - platform: gpio
    name: "Pin 2"
    id: pin2
    pin:
      number: GPIO22
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin2
    on_release:
      then:
        - light.turn_off: statuspin2
  - platform: gpio
    name: "Pin 3"
    id: pin3
    pin:
      number: GPIO19
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin3
    on_release:
      then:
        - light.turn_off: statuspin3
  - platform: gpio
    name: "Pin 4"
    id: pin4
    pin:
      number: GPIO23
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin4
    on_release:
      then:
        - light.turn_off: statuspin4
  - platform: gpio
    name: "Pin 5"
    id: pin5
    pin:
      number: GPIO21
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin5
    on_release:
      then:
        - light.turn_off: statuspin5
  - platform: gpio
    name: "Pin 6"
    id: pin6
    pin:
      number: GPIO12
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin6
    on_release:
      then:
        - light.turn_off: statuspin6
  - platform: gpio
    name: "Pin 7"
    id: pin7
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin7
    on_release:
      then:
        - light.turn_off: statuspin7
  - platform: gpio
    name: "Pin 8"
    id: pin8
    pin:
      number: GPIO33
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin8
    on_release:
      then:
        - light.turn_off: statuspin8
  - platform: gpio
    name: "Pin 9"
    id: pin9
    pin:
      number: GPIO32
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin9
    on_release:
      then:
        - light.turn_off: statuspin9
  - platform: gpio
    name: "Pin 10"
    id: pin10
    pin:
      number: GPIO27
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.turn_on: statuspin10
    on_release:
      then:
        - light.turn_off: statuspin10

#####################Wurfsensoren
  - platform: gpio
    pin:
      mcp23xxx: gpio_hub
      number: 0
      mode: INPUT_PULLUP
      inverted: true
    id: lasersensor1
#    name: "Lichtschranke1"
    filters:
      - delayed_off: 2000ms
  - platform: gpio
    pin:
      mcp23xxx: gpio_hub
      number: 2
      mode: INPUT_PULLUP
      inverted: true
    id: lasersensor2
#    name: "Lichtschranke2"
    filters:
      - delayed_off: 2000ms
  - platform: gpio
    pin:
      mcp23xxx: gpio_hub
      number: 1
      mode: INPUT_PULLUP
      inverted: true
    id: lasersensor3
#    name: "Lichtschranke3"
    filters:
      - delayed_off: 2000ms
#####################Statussensoren Winde        
  - platform: gpio
    pin:
      mcp23xxx: gpio_hub
      number: 13
      inverted: true
      mode: INPUT_PULLUP
    id: winde_links
    name: "winde links"
  - platform: gpio
    pin:
      mcp23xxx: gpio_hub
      number: 14
      inverted: true
      mode: INPUT_PULLUP
    id: winde_mitte
    name: "winde mitte"
    on_press:
      then:
        - lambda: |
            if (id(windensteuerung).current_operation != COVER_OPERATION_IDLE)  
              {
                auto call = id(windensteuerung).make_call();
                call.set_command_stop();
                call.perform();  // Cover is opening/closing. Stop it
              }
  - platform: gpio
    pin:
      mcp23xxx: gpio_hub
      number: 15
      mode: INPUT_PULLUP
      inverted: true
    id: winde_rechts
    name: "winde rechts"
#####################externe Taster
  - platform: gpio  
    pin:
      number: GPIO34  
      inverted: true
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    id: button_open_1
    on_press:
      then:
      # logic for cycling through movements: open->stop->close->stop->...
        - lambda: |
            if (id(windensteuerung).current_operation == COVER_OPERATION_IDLE)  
              {
                auto call = id(windensteuerung).make_call();
                call.set_command_open();
                call.perform();
              } 
            else 
              {
                auto call = id(windensteuerung).make_call();
                call.set_command_stop();
                call.perform();  // Cover is opening/closing. Stop it
              }
  - platform: gpio
    pin:
      number: GPIO35
      inverted: true
    filters:
      - delayed_on: 50ms
      - delayed_off: 50ms
    id: button_close_1
    on_press:
      then:
      # logic for cycling through movements: open->stop->close->stop->...
        - lambda: |
            if (id(windensteuerung).current_operation == COVER_OPERATION_IDLE)  
              {
                auto call = id(windensteuerung).make_call();
                call.set_command_close();
                call.perform(); 
              } 
            else 
              {
                auto call = id(windensteuerung).make_call();
                call.set_command_stop();
                call.perform();  // Cover is opening/closing. Stop it
              }


output:
#####################Relay Motor nach rechts
  - platform: gpio
    pin: 
      number: GPIO02
      inverted: true
    power_supply: power_supply1
    id: 'links_output_1'
#####################Relay Motor nach links
  - platform: gpio
    pin: 
      number: GPIO00
      inverted: true
    power_supply: power_supply1
    id: 'rechts_output_1'
#####################Servo Outputs
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out1'
    channel: 0
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out2'
    channel: 1  
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out3'
    channel: 2
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out4'
    channel: 3  
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out5'
    channel: 4
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out6'
    channel: 5  
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out7'
    channel: 6
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out8'
    channel: 7  
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out9'
    channel: 8
  - platform: pca9685
    pca9685_id: 'pca9685_1'
    id: 'pinsperre_out10'
    channel: 9

servo:
  - id: pinsperre1
    output: pinsperre_out1
  - id: pinsperre2
    output: pinsperre_out2
  - id: pinsperre3
    output: pinsperre_out3
  - id: pinsperre4
    output: pinsperre_out4
  - id: pinsperre5
    output: pinsperre_out5
  - id: pinsperre6
    output: pinsperre_out6
  - id: pinsperre7
    output: pinsperre_out7
  - id: pinsperre8
    output: pinsperre_out8
  - id: pinsperre9
    output: pinsperre_out9
  - id: pinsperre10
    output: pinsperre_out10
    
switch:
#########################Pinsperren
  - platform: template
    name: "Pinsperre1"
    optimistic: true
    id: pinsperre_switch1
    turn_on_action:
    - servo.write:
        id: pinsperre1
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre1
        level: -1
  - platform: template
    name: "Pinsperre2"
    optimistic: true
    id: pinsperre_switch2
    turn_on_action:
    - servo.write:
        id: pinsperre2
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre2
        level: -1
  - platform: template
    name: "Pinsperre3"
    optimistic: true
    id: pinsperre_switch3
    turn_on_action:
    - servo.write:
        id: pinsperre3
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre3
        level: -1
  - platform: template
    name: "Pinsperre4"
    optimistic: true
    id: pinsperre_switch4
    turn_on_action:
    - servo.write:
        id: pinsperre4
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre4
        level: -1
  - platform: template
    name: "Pinsperre5"
    optimistic: true
    id: pinsperre_switch5
    turn_on_action:
    - servo.write:
        id: pinsperre5
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre5
        level: -1
  - platform: template
    name: "Pinsperre6"
    optimistic: true
    id: pinsperre_switch6
    turn_on_action:
    - servo.write:
        id: pinsperre6
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre6
        level: -1
  - platform: template
    name: "Pinsperre7"
    optimistic: true
    id: pinsperre_switch7
    turn_on_action:
    - servo.write:
        id: pinsperre7
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre7
        level: -1
  - platform: template
    name: "Pinsperre8"
    optimistic: true
    id: pinsperre_switch8
    turn_on_action:
    - servo.write:
        id: pinsperre8
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre8
        level: -1
  - platform: template
    name: "Pinsperre9"
    optimistic: true
    id: pinsperre_switch9
    turn_on_action:
    - servo.write:
        id: pinsperre9
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre9
        level: -1
  - platform: template
    name: "Pinsperre10"
    optimistic: true
    id: pinsperre_switch10
    turn_on_action:
    - servo.write:
        id: pinsperre10
        level: 1
    turn_off_action:
    - servo.write:
        id: pinsperre10
        level: -1
#########################Motor
  - platform: output
#    name: "Motor links"
    output: 'links_output_1'
    id: 'motor_links'
  - platform: output
#    name: "Motor rechts"
    output: 'rechts_output_1'
    id: 'motor_rechts'

    
cover:
  - platform: endstop
    name: "Windensteuerung"
    id: windensteuerung
    open_action:
      - switch.turn_on: motor_links
    open_duration: 12s
    open_endstop: winde_links

    close_action:
      - switch.turn_on: motor_rechts
    close_duration: 12s
    close_endstop: winde_rechts

    stop_action:
      - switch.turn_off: motor_links
      - switch.turn_off: motor_rechts
    max_duration: 12s
    

      
      
sensor:
  - platform: binary_sensor_map
    id: pinstatus
    name: 'Pinstatus'
    type: GROUP
    channels:
      - binary_sensor: pin1
        value: 1
      - binary_sensor: pin2
        value: 2
      - binary_sensor: pin3
        value: 4
      - binary_sensor: pin4
        value: 8
      - binary_sensor: pin5
        value: 16
      - binary_sensor: pin6
        value: 32
      - binary_sensor: pin7
        value: 64
      - binary_sensor: pin8
        value: 128
      - binary_sensor: pin9
        value: 256
      - binary_sensor: pin10
        value: 512
#####################Temperaursensor
  - platform: bme280
    temperature:
      name: "Temperatur Spielezimmer"
      id: temp_spielezimmer
    pressure:
      name: "Luftdruck Spielezimmer"
      id: druck_spielezimmer
    humidity:
      name: "Luftfeuchtigkeit Spielezimmer"
      id: feucht_spielezimmer
    address: 0x76
    i2c_id: bus_a
    update_interval: 15s